---
env:
  contexts:
  - name: "Default Context"
    urls:
    - "<start URL>"
    excludePaths: []
    authentication:
      parameters: {}
      verification:
        method: "response"
        pollFrequency: 60
        pollUnits: "requests"
    sessionManagement:
      method: "cookie"
      parameters: {}
    technology:
      exclude:
      - "C"
      - "IBM DB2"
      - "PHP"
      - "CouchDB"
      - "Oracle"
      - "JSP/Servlet"
      - "Firebird"
      - "HypersonicSQL"
      - "SAP MaxDB"
      - "Ruby"
      - "Microsoft Access"
      - "Java"
      - "Tomcat"
      - "Sybase"
      - "Python"
  parameters:
    failOnError: true
    failOnWarning: false
    progressToStdout: true
  vars: {}
jobs:
- parameters:
    scanOnlyInScope: true
    enableTags: false
    disableAllRules: false
  rules:
  # This needs to be disabled during UI testing, because a local app needn't use HSTS. It's also something commonly
  # configured outside the app, like in Cloudflare.
  - id: 10035
    name: "Strict-Transport-Security Header"
    threshold: "off"
  # Some stock Orchard Core shapes and pages (including the setup page) contain inline script blocks, so this directive
  # must be permitted for OC to work at all.
  - id: 10055
    name: "script-src includes unsafe-inline"
    threshold: "off"
  # This is a low-risk alert, enforcing it is undesirable for branding.
  - id: 10037
    name: "Server Leaks Information via 'X-Powered-By' HTTP Response Header Field(s)"
    threshold: "off"
  # This rule generates false positives on UUIDs or random numeric sequences.
  - id: 10062
    name: "The response contains Personally Identifiable Information, such as CC number, SSN and similar sensitive data."
    threshold: "off"
  name: "passiveScan-config"
  type: "passiveScan-config"
- parameters:
    queryGenEnabled: true
    maxQueryDepth: 5
    lenientMaxQueryDepthEnabled: true
    maxAdditionalQueryDepth: 5
    maxArgsDepth: 5
    optionalArgsEnabled: true
    argsType: "both"
    querySplitType: "leaf"
    requestMethod: "post_json"
  name: "graphql"
  type: "graphql"
- parameters: {}
  name: "passiveScan-wait"
  type: "passiveScan-wait"
- parameters: {}
  policyDefinition:
    rules: []
  name: "activeScan"
  type: "activeScan"
- parameters:
    reportDir: "/zap/wrk/reports"
    template: "modern"
    theme: "corporate"
    reportTitle: "ZAP Scanning Report"
    reportDescription: ""
  risks:
  - "low"
  - "medium"
  - "high"
  confidences:
  - "low"
  - "medium"
  - "high"
  - "confirmed"
  sections:
  - "passingrules"
  - "instancecount"
  - "alertdetails"
  - "alertcount"
  - "params"
  - "chart"
  - "statistics"
  name: "report"
  type: "report"
- parameters:
    template: "sarif-json"
    reportDir: "/zap/wrk/reports"
    reportFile: ""
    reportTitle: "ZAP Scanning Report"
    reportDescription: ""
    displayReport: false
  risks:
  - "info"
  - "low"
  - "medium"
  - "high"
  confidences:
  - "falsepositive"
  - "low"
  - "medium"
  - "high"
  - "confirmed"
  sites: []
  name: "sarifReport"
  type: "report"

